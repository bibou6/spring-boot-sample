<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>bibou6</groupId>
		<artifactId>spring-boot-sample</artifactId>
		<version>0.0.1</version>
		<relativePath>../pom.xml</relativePath> <!-- lookup parent from repository -->
	</parent>

	<artifactId>spring-boot-sample-engine</artifactId>
	<packaging>war</packaging>

	<name>${project.artifactId}</name>
	<description>Spring boot sample Engine</description>

	<properties>
		<springfox.version>2.9.2</springfox.version>
		<spring.quartz.version>2.0.0.M2</spring.quartz.version>
		<mapstruct.version>1.3.0.Final</mapstruct.version>
		<java.version>1.8</java.version>
		<spring-boot.version>2.4.4</spring-boot.version>

		<!-- Database -->
		<liquibase.version>3.10.2</liquibase.version>
		<liquibase-hibernate5.version>3.10.2</liquibase-hibernate5.version>
		<hibernate5.version>5.4.21.Final</hibernate5.version>
		<javassist.version>3.24.0-GA</javassist.version>
		<validation-api.version>2.0.1.Final</validation-api.version>

		<!-- Generation doc swagger & asciidoc -->
		<swagger2markup.version>1.3.3</swagger2markup.version>
		<asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
		<generated.asciidoc.history.dir>${project.basedir}/src/docs/asciidoc/history</generated.asciidoc.history.dir>
		<swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		<swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
		<generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.history.dir>${project.build.directory}/asciidoc/history</asciidoctor.history.dir>
		<swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Model -->
		<dependency>
			<groupId>bibou6</groupId>
			<artifactId>spring-boot-sample-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- End -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Liquibase -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-maven-plugin</artifactId>
			<version>3.4.1</version>
		</dependency>
		<!-- End -->

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>


		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- Scope Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- End -->


		<!-- Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<!-- End -->

		<!-- Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<!-- End -->

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-52</artifactId>
			<version>2.10.4</version>
		</dependency>
		<!-- End -->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<useIncrementalCompilation>false</useIncrementalCompilation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${liquibase.version}</version>
				<configuration>
					<propertyFile>src/main/resources/liquibase.yml</propertyFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-core</artifactId>
						<version>${liquibase.version}</version>
					</dependency>
					<dependency>
						<groupId>org.liquibase.ext</groupId>
						<artifactId>liquibase-hibernate5</artifactId>
						<version>${liquibase-hibernate5.version}</version>
					</dependency>
					<dependency>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-data-jpa</artifactId>
						<version>${spring-boot.version}</version>
					</dependency>
					<dependency>
						<groupId>javax.validation</groupId>
						<artifactId>validation-api</artifactId>
						<version>${validation-api.version}</version>
					</dependency>
					<dependency>
						<groupId>org.javassist</groupId>
						<artifactId>javassist</artifactId>
						<version>${javassist.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>doc-generation</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>default-test</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>swagger-generation</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<systemPropertyVariables>
										<io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
										<io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
									</systemPropertyVariables>
									<includes>
										<include>**/GenSwaggerFileAndDoc</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- First, use the swagger2markup plugin to generate asciidoc -->
					<plugin>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-maven-plugin</artifactId>
						<version>${swagger2markup.version}</version>
						<dependencies>
							<dependency>
								<groupId>io.github.swagger2markup</groupId>
								<artifactId>swagger2markup-import-files-ext</artifactId>
								<version>${swagger2markup.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<swaggerInput>${swagger.input}</swaggerInput>
							<outputDir>${generated.asciidoc.directory}</outputDir>
							<config>
								<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
								<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>

								<swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/docs/asciidoc/extensions/overview
								</swagger2markup.extensions.dynamicOverview.contentPath>
								<swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/docs/asciidoc/extensions/definitions
								</swagger2markup.extensions.dynamicDefinitions.contentPath>
								<swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/docs/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
								<swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/docs/asciidoc/extensions/security/
								</swagger2markup.extensions.dynamicSecurity.contentPath>

								<swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
								<swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets>
							</config>
						</configuration>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>convertSwagger2markup</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Run the generated asciidoc through Asciidoctor to generate other 
						documentation types, such as PDFs or HTML5 -->
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.6</version>
						<!-- Configure generic document generation settings -->
						<configuration>
							<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
							<sourceDocumentName>index.adoc</sourceDocumentName>
							<attributes>
								<icons>font</icons>
								<doctype>book</doctype>
								<toc>left</toc>
								<toclevels>5</toclevels>
								<sectanchors>true</sectanchors>
								<docinfo1>true</docinfo1>
								<numbered></numbered>
								<hardbreaks></hardbreaks>
								<sectlinks></sectlinks>
								<highlightjsdir>highlight</highlightjsdir>
								<highlightjs-theme>gruvbox-dark</highlightjs-theme>
								<!-- custom -->
								<source-dir>../../main/java</source-dir>
								<test-dir>../../test/java</test-dir>
								<project-version>${project.version}</project-version>
								<history-dir>${asciidoctor.history.dir}</history-dir>
								<generated>${generated.asciidoc.directory}</generated>
							</attributes>
						</configuration>
						<!-- Since each execution can only handle one backend, run separate 
							executions for each desired output type -->
						<executions>
							<execution>
								<id>output-html</id>
								<phase>test</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<sourceHighlighter>highlight.js</sourceHighlighter>
									<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<distributionManagement>
		<repository>
			<id>github</id>
			<name>${project.artifactId}</name>
			<url>https://maven.pkg.github.com/bibou6/${project.parent.artifactId}</url>
		</repository>
	</distributionManagement>

</project>
